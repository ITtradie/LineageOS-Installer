<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Label2.Text" xml:space="preserve">
    <value>To install Google Apps (GAPPS) (Play Store, GMail, etc), 
you need to flash them to the system. For the
platform, you may wish to perform a google
search for "[Device Name] architecture", but basically
if you have a newer device, choose "ARM64", and if
you have an older device, choose "ARM." For the
Android version, choose 6.0 if you are installing
LineageOS 13, or 7.1 if you are installing LineageOS 14.1.
Finally, the varient is how many Google Apps you want
installed; with "Pico" being only the neccesary apps, and
"Super" being all the Google Apps. Stay away from
"tvstock" and "aroma." When you finish your selection,
click the red downlaod arrow.

The web page will open in an external browser. Please
click "Download GAPPS" below.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mQAAAABJRU5ErkJggg==
</value>
  </data>
</root>